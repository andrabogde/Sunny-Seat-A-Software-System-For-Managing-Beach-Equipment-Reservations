# =====================================
# application.yml - CONFIGURAÈšIA INTEGRATÄ‚
# =====================================

# âœ… SINGURA MODIFICARE: Am È™ters comentariul "#production" de pe prima linie
spring:
  profiles:
    active: local
---
# =====================================
# PROFILE LOCAL - configuraÈ›ia ta + Netopia
# =====================================
spring:
  config:
    activate:
      on-profile: local

  messages:
    basename: lang/res
    fallback-to-system-locale: true
    
  datasource:
    url: ${DATASOURCE_URL:jdbc:mysql://localhost:3306/administrare_plaje}
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver 

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: clientId
            clientSecret: clientSecret
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,name,email,picture.width(250).height(250)
            
  # CONFIGURAÈšIA MAIL EXISTENTÄ‚ (Yahoo)
  mail:
    host: ${MAIL_SERVER_HOST:smtp.mail.yahoo.com}
    port: ${MAIL_SERVER_PORT:587}
    username: ${MAIL_SERVER_USERNAME:}
    password: ${MAIL_SERVER_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          timeout: 5000
          connectiontimeout: 5000
          writetimeout: 5000
        debug: true
    protocol: smtp
    test-connection: false

# =====================================
# CONFIGURAÈšIA TA EXISTENTÄ‚
# =====================================
app:
  name: "SunnySeat"
  frontEndUri: ${FRONTEND_URL:http://localhost:4000}  # Folosesc variabila ta
  deleteExpiredTokensDelayMsec: 30000 # 30 seconds
  updatePlaceDetailsDelayMsec: 1800000 # 30 minutes
  max-request-size: 200000000 # 200 MB
  
  allowedOrigins:
    - ${app.frontEndUri}
    - https://auth.expo.io/@hasatori/ReactNativeFrontend
    - http://localhost:3000  # Pentru frontend React
    
  authorizedRedirectUris:
    - ${app.frontEndUri}/oauth2/redirect
    - https://auth.expo.io/@hasatori/ReactNativeFrontend
    
  accountActivationUri: ${app.frontEndUri}/activate-account
  emailChangeConfirmationUri: ${app.frontEndUri}/confirm-email-change
  passwordResetUri: ${app.frontEndUri}/reset-password
  
  # Email settings
  email-from: "support@sunnyseat.ro"
  email-from-name: "SunnySeat"

  # Stripe Configuration
stripe:
  public:
    key: public_key
  secret:
    key: secret_key
  # webhook:
  #   secret: ${STRIPE_WEBHOOK_SECRET:whsec_default}
  
  auth:
    accessTokenExpirationMsec: 30000000
    refreshTokenExpirationMsec: 90000000 
    verificationTokenExpirationMsec: 3600000
    # ðŸ”§ JWT SECRET CORECTAT - 128 caractere pentru HS512
    tokenSecret: ${AUTH_TOKEN_SECRET:ThisIsAVeryLongAndSecureJwtSecretKeyForHS512AlgorithmThatHasMoreThan64CharactersAndIsCompletelySecureForProduction123456789}
  
  tomcat:
    connection-timeout: 5s



# =====================================
# API KEYS EXISTENTE
# =====================================
google:
  api: 
    key: google_api_key
    
weather: 
  api: 
    key: weather_api_key

# =====================================
# LOGGING ÃŽMBUNÄ‚TÄ‚ÈšIT
# =====================================
logging:
  level:
    com.example.fullstacktemplate.service.TokenService: DEBUG
    com.example.fullstacktemplate.service.AuthenticationService: DEBUG
    com.example.fullstacktemplate.service.EmailService: DEBUG

    org.springframework.mail: DEBUG

---
# =====================================
# PROFILE PRODUCTION
# =====================================
spring:
  config:
    activate:
      on-profile: production

  messages:
    basename: lang/res
    fallback-to-system-locale: true
    
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver 

  jpa:
    show-sql: false  # FALSE Ã®n producÈ›ie
    hibernate:
      ddl-auto: validate  # VALIDATE Ã®n producÈ›ie
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: ${FACEBOOK_CLIENT_ID}
            clientSecret: ${FACEBOOK_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,name,email,picture.width(250).height(250)
            
  # MAIL pentru producÈ›ie
  mail:
    host: ${MAIL_SERVER_HOST}
    port: ${MAIL_SERVER_PORT:587}
    username: ${MAIL_SERVER_USERNAME}
    password: ${MAIL_SERVER_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          timeout: 10000
          connectiontimeout: 10000
          writetimeout: 10000
        debug: false  # FALSE Ã®n producÈ›ie
    protocol: smtp
    test-connection: false

# ConfiguraÈ›ia app pentru producÈ›ie
app:
  name: "SunnySeat"
  frontEndUri: ${PROD_FRONTEND_URL:https://www.sunnyseat.ro}
  deleteExpiredTokensDelayMsec: 86400000 # 1 day
  updatePlaceDetailsDelayMsec: 600000 # 10 minutes
  max-request-size: 200000000 # 200 MB
  
  allowedOrigins:
    - ${app.frontEndUri}
    - https://auth.expo.io/@hasatori/ReactNativeFrontend
    
  authorizedRedirectUris:
    - ${app.frontEndUri}/oauth2/redirect
    - https://auth.expo.io/@hasatori/ReactNativeFrontend
    
  accountActivationUri: ${app.frontEndUri}/activate-account
  emailChangeConfirmationUri: ${app.frontEndUri}/confirm-email-change
  passwordResetUri: ${app.frontEndUri}/reset-password
  
  email-from: ${PROD_EMAIL_FROM:support@sunnyseat.ro}
  email-from-name: "SunnySeat"
  
  auth:
    accessTokenExpirationMsec: 300000 # 5 minutes Ã®n producÈ›ie
    refreshTokenExpirationMsec: 2592000000 # 30 days
    verificationTokenExpirationMsec: 3600000 # 1 hour
    # ðŸ”§ JWT SECRET PENTRU PRODUCÈšIE - VA FI SUPRASCRIS DE VARIABILA DE MEDIU
    tokenSecret: ${AUTH_TOKEN_SECRET:ThisIsAVeryLongAndSecureJwtSecretKeyForHS512AlgorithmThatHasMoreThan64CharactersAndIsCompletelySecureForProduction123456789}
  
  tomcat:
    connection-timeout: 10s



# API Keys pentru producÈ›ie
google:
  api: 
    key: ${GOOGLE_API_KEY}
    
weather: 
  api: 
    key: ${WEATHER_API_KEY}

# Logging pentru producÈ›ie
logging:
  level:
    com.example: INFO
    org.springframework: WARN
    org.hibernate: WARN
  file:
    name: /var/log/sunnyseat/application.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"