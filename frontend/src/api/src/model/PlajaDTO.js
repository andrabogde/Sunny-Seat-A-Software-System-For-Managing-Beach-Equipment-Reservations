/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlajaDTO model module.
 * @module model/PlajaDTO
 * @version 1.0
 */
class PlajaDTO {
    /**
     * Constructs a new <code>PlajaDTO</code>.
     * @alias module:model/PlajaDTO
     */
    constructor() { 
        
        PlajaDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlajaDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlajaDTO} obj Optional instance to populate.
     * @return {module:model/PlajaDTO} The populated <code>PlajaDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlajaDTO();

            if (data.hasOwnProperty('activ')) {
                obj['activ'] = ApiClient.convertToType(data['activ'], 'Boolean');
            }
            if (data.hasOwnProperty('denumire')) {
                obj['denumire'] = ApiClient.convertToType(data['denumire'], 'String');
            }
            if (data.hasOwnProperty('descriere')) {
                obj['descriere'] = ApiClient.convertToType(data['descriere'], 'String');
            }
            if (data.hasOwnProperty('firmaId')) {
                obj['firmaId'] = ApiClient.convertToType(data['firmaId'], 'Number');
            }
            if (data.hasOwnProperty('numarSezlonguri')) {
                obj['numarSezlonguri'] = ApiClient.convertToType(data['numarSezlonguri'], 'Number');
            }
            if (data.hasOwnProperty('statiuneId')) {
                obj['statiuneId'] = ApiClient.convertToType(data['statiuneId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlajaDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlajaDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['denumire'] && !(typeof data['denumire'] === 'string' || data['denumire'] instanceof String)) {
            throw new Error("Expected the field `denumire` to be a primitive type in the JSON string but got " + data['denumire']);
        }
        // ensure the json data is a string
        if (data['descriere'] && !(typeof data['descriere'] === 'string' || data['descriere'] instanceof String)) {
            throw new Error("Expected the field `descriere` to be a primitive type in the JSON string but got " + data['descriere']);
        }

        return true;
    }


}



/**
 * @member {Boolean} activ
 */
PlajaDTO.prototype['activ'] = undefined;

/**
 * @member {String} denumire
 */
PlajaDTO.prototype['denumire'] = undefined;

/**
 * @member {String} descriere
 */
PlajaDTO.prototype['descriere'] = undefined;

/**
 * @member {Number} firmaId
 */
PlajaDTO.prototype['firmaId'] = undefined;

/**
 * @member {Number} numarSezlonguri
 */
PlajaDTO.prototype['numarSezlonguri'] = undefined;

/**
 * @member {Number} statiuneId
 */
PlajaDTO.prototype['statiuneId'] = undefined;






export default PlajaDTO;

