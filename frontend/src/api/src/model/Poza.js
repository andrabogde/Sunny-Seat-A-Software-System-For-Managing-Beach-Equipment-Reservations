/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Poza model module.
 * @module model/Poza
 * @version 1.0
 */
class Poza {
    /**
     * Constructs a new <code>Poza</code>.
     * @alias module:model/Poza
     */
    constructor() { 
        
        Poza.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Poza</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Poza} obj Optional instance to populate.
     * @return {module:model/Poza} The populated <code>Poza</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Poza();

            if (data.hasOwnProperty('caleImagine')) {
                obj['caleImagine'] = ApiClient.convertToType(data['caleImagine'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('ordine')) {
                obj['ordine'] = ApiClient.convertToType(data['ordine'], 'Number');
            }
            if (data.hasOwnProperty('plajaId')) {
                obj['plajaId'] = ApiClient.convertToType(data['plajaId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Poza</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Poza</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caleImagine'] && !(typeof data['caleImagine'] === 'string' || data['caleImagine'] instanceof String)) {
            throw new Error("Expected the field `caleImagine` to be a primitive type in the JSON string but got " + data['caleImagine']);
        }

        return true;
    }


}



/**
 * @member {String} caleImagine
 */
Poza.prototype['caleImagine'] = undefined;

/**
 * @member {Date} createdAt
 */
Poza.prototype['createdAt'] = undefined;

/**
 * @member {Number} id
 */
Poza.prototype['id'] = undefined;

/**
 * @member {Number} ordine
 */
Poza.prototype['ordine'] = undefined;

/**
 * @member {Number} plajaId
 */
Poza.prototype['plajaId'] = undefined;






export default Poza;

