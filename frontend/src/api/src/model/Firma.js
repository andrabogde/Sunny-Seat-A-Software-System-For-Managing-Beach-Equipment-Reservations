/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Firma model module.
 * @module model/Firma
 * @version 1.0
 */
class Firma {
    /**
     * Constructs a new <code>Firma</code>.
     * @alias module:model/Firma
     */
    constructor() { 
        
        Firma.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Firma</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Firma} obj Optional instance to populate.
     * @return {module:model/Firma} The populated <code>Firma</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Firma();

            if (data.hasOwnProperty('activ')) {
                obj['activ'] = ApiClient.convertToType(data['activ'], 'Boolean');
            }
            if (data.hasOwnProperty('adresa')) {
                obj['adresa'] = ApiClient.convertToType(data['adresa'], 'String');
            }
            if (data.hasOwnProperty('cui')) {
                obj['cui'] = ApiClient.convertToType(data['cui'], 'String');
            }
            if (data.hasOwnProperty('denumire')) {
                obj['denumire'] = ApiClient.convertToType(data['denumire'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('telefon')) {
                obj['telefon'] = ApiClient.convertToType(data['telefon'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Firma</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Firma</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adresa'] && !(typeof data['adresa'] === 'string' || data['adresa'] instanceof String)) {
            throw new Error("Expected the field `adresa` to be a primitive type in the JSON string but got " + data['adresa']);
        }
        // ensure the json data is a string
        if (data['cui'] && !(typeof data['cui'] === 'string' || data['cui'] instanceof String)) {
            throw new Error("Expected the field `cui` to be a primitive type in the JSON string but got " + data['cui']);
        }
        // ensure the json data is a string
        if (data['denumire'] && !(typeof data['denumire'] === 'string' || data['denumire'] instanceof String)) {
            throw new Error("Expected the field `denumire` to be a primitive type in the JSON string but got " + data['denumire']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['telefon'] && !(typeof data['telefon'] === 'string' || data['telefon'] instanceof String)) {
            throw new Error("Expected the field `telefon` to be a primitive type in the JSON string but got " + data['telefon']);
        }

        return true;
    }


}



/**
 * @member {Boolean} activ
 */
Firma.prototype['activ'] = undefined;

/**
 * @member {String} adresa
 */
Firma.prototype['adresa'] = undefined;

/**
 * @member {String} cui
 */
Firma.prototype['cui'] = undefined;

/**
 * @member {String} denumire
 */
Firma.prototype['denumire'] = undefined;

/**
 * @member {String} email
 */
Firma.prototype['email'] = undefined;

/**
 * @member {Number} id
 */
Firma.prototype['id'] = undefined;

/**
 * @member {String} telefon
 */
Firma.prototype['telefon'] = undefined;






export default Firma;

